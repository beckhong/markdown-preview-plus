"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const atom_1 = require("atom");
const path = require("path");
const util_1 = require("../util");
class UserStylesManager {
    constructor() {
        this.numUsers = 0;
        this.disposables = new atom_1.CompositeDisposable();
        this.fileDisposables = new atom_1.CompositeDisposable();
        this.subscribers = new Set();
        this.configDir = new atom_1.Directory(path.join(atom.getConfigDirPath(), 'markdown-preview-plus'));
        if (!this.configDir.existsSync())
            util_1.handlePromise(this.configDir.create());
        this.disposables.add(this.fileDisposables, this.configDir.onDidChange(() => {
            this.didChangeDirContents();
        }));
        this.files = this.getDirContents();
    }
    static subscribe(callback) {
        const inst = UserStylesManager.instance();
        const disp = new atom_1.CompositeDisposable();
        disp.add(inst, inst.subscribe(callback));
        return disp;
    }
    static getStyleFiles(context) {
        const inst = UserStylesManager._instance;
        if (inst) {
            return inst.files.filter((file) => {
                const fileInfo = path.parse(file);
                const fileName = fileInfo.name.toLowerCase();
                const fileHasContext = fileName.match(/--[a-z]+$/) !== null;
                const fileContextMatches = fileHasContext && fileName.endsWith(`--${context}`);
                return !fileHasContext || fileContextMatches;
            });
        }
        else
            return [];
    }
    static instance() {
        if (UserStylesManager._instance === undefined) {
            UserStylesManager._instance = new UserStylesManager();
        }
        UserStylesManager._instance.numUsers += 1;
        return UserStylesManager._instance;
    }
    dispose() {
        this.numUsers -= 1;
        if (this.numUsers === 0) {
            this.disposables.dispose();
            UserStylesManager._instance = undefined;
        }
    }
    subscribe(callback) {
        this.subscribers.add(callback);
        return new atom_1.Disposable(() => {
            this.subscribers.delete(callback);
        });
    }
    didChangeDirContents() {
        this.files = this.getDirContents();
        this.notifySubscribers();
    }
    getDirContents() {
        const entries = this.configDir.getEntriesSync();
        return entries
            .filter((entry) => {
            if (entry.isDirectory())
                return false;
            const filePath = entry.getPath().toLowerCase();
            return filePath.endsWith('.less') || filePath.endsWith('.css');
        })
            .map((file) => file.getPath());
    }
    notifySubscribers() {
        for (const cb of this.subscribers.values()) {
            cb();
        }
    }
}
exports.UserStylesManager = UserStylesManager;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1zdHlsZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbWFya2Rvd24tcHJldmlldy12aWV3L3VzZXItc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQWlFO0FBQ2pFLDZCQUE0QjtBQUM1QixrQ0FBdUM7QUFFdkMsTUFBYSxpQkFBaUI7SUFVNUI7UUFOUSxhQUFRLEdBQUcsQ0FBQyxDQUFBO1FBQ1osZ0JBQVcsR0FBRyxJQUFJLDBCQUFtQixFQUFFLENBQUE7UUFDdkMsb0JBQWUsR0FBRyxJQUFJLDBCQUFtQixFQUFFLENBQUE7UUFDM0MsZ0JBQVcsR0FBRyxJQUFJLEdBQUcsRUFBYyxDQUFBO1FBSXpDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxnQkFBUyxDQUM1QixJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxFQUFFLHVCQUF1QixDQUFDLENBQzVELENBQUE7UUFDRCxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFVLEVBQUU7WUFBRSxvQkFBYSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQTtRQUN4RSxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FDbEIsSUFBSSxDQUFDLGVBQWUsRUFDcEIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsR0FBRyxFQUFFO1lBQzlCLElBQUksQ0FBQyxvQkFBb0IsRUFBRSxDQUFBO1FBQzdCLENBQUMsQ0FBQyxDQUNILENBQUE7UUFDRCxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQTtJQUNwQyxDQUFDO0lBRU0sTUFBTSxDQUFDLFNBQVMsQ0FBQyxRQUFvQjtRQUMxQyxNQUFNLElBQUksR0FBRyxpQkFBaUIsQ0FBQyxRQUFRLEVBQUUsQ0FBQTtRQUN6QyxNQUFNLElBQUksR0FBRyxJQUFJLDBCQUFtQixFQUFFLENBQUE7UUFDdEMs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Q0FBQTtTQUNMO0lBQ0gsQ0FBQztDQUNGO0FBekZELDhDQXlGQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdG9yeSwgQ29tcG9zaXRlRGlzcG9zYWJsZSwgRGlzcG9zYWJsZSB9IGZyb20gJ2F0b20nXG5pbXBvcnQgKiBhcyBwYXRoIGZyb20gJ3BhdGgnXG5pbXBvcnQgeyBoYW5kbGVQcm9taXNlIH0gZnJvbSAnLi4vdXRpbCdcblxuZXhwb3J0IGNsYXNzIFVzZXJTdHlsZXNNYW5hZ2VyIHtcbiAgcHJpdmF0ZSBzdGF0aWMgX2luc3RhbmNlPzogVXNlclN0eWxlc01hbmFnZXJcblxuICBwcml2YXRlIGNvbmZpZ0RpcjogRGlyZWN0b3J5XG4gIHByaXZhdGUgbnVtVXNlcnMgPSAwXG4gIHByaXZhdGUgZGlzcG9zYWJsZXMgPSBuZXcgQ29tcG9zaXRlRGlzcG9zYWJsZSgpXG4gIHByaXZhdGUgZmlsZURpc3Bvc2FibGVzID0gbmV3IENvbXBvc2l0ZURpc3Bvc2FibGUoKVxuICBwcml2YXRlIHN1YnNjcmliZXJzID0gbmV3IFNldDwoKSA9PiB2b2lkPigpXG4gIHByaXZhdGUgZmlsZXM6IHN0cmluZ1tdXG5cbiAgcHJpdmF0ZSBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmNvbmZpZ0RpciA9IG5ldyBEaXJlY3RvcnkoXG4gICAgICBwYXRoLmpvaW4oYXRvbS5nZXRDb25maWdEaXJQYXRoKCksICdtYXJrZG93bi1wcmV2aWV3LXBsdXMnKSxcbiAgICApXG4gICAgaWYgKCF0aGlzLmNvbmZpZ0Rpci5leGlzdHNTeW5jKCkpIGhhbmRsZVByb21pc2UodGhpcy5jb25maWdEaXIuY3JlYXRlKCkpXG4gICAgdGhpcy5kaXNwb3NhYmxlcy5hZGQoXG4gICAgICB0aGlzLmZpbGVEaXNwb3NhYmxlcyxcbiAgICAgIHRoaXMuY29uZmlnRGlyLm9uRGlkQ2hhbmdlKCgpID0+IHtcbiAgICAgICAgdGhpcy5kaWRDaGFuZ2VEaXJDb250ZW50cygpXG4gICAgICB9KSxcbiAgICApXG4gICAgdGhpcy5maWxlcyA9IHRoaXMuZ2V0RGlyQ29udGVudHMoKVxuICB9XG5cbiAgcHVibGljIHN0YXRpYyBzdWJzY3JpYmUoY2FsbGJhY2s6ICgpID0+IHZvaWQpIHtcbiAgICBjb25zdCBpbnN0ID0gVXNlclN0eWxlc01hbmFnZXIuaW5zdGFuY2UoKVxuICAgIGNvbnN0IGRpc3AgPSBuZXcgQ29tcG9zaXRlRGlzcG9zYWJsZSgpXG4gICAgZGlzcC5hZGQoaW5zdCwgaW5zdC5zdWJzY3JpYmUoY2FsbGJhY2spKVxuICAgIHJldHVybiBkaXNwXG4gIH1cblxuICBwdWJsaWMgc3RhdGljIGdldFN0eWxlRmlsZXMoY29udGV4dDogJ3BkZicgfCAnY29weScgfCAnaHRtbCcgfCAnbGl2ZScpIHtcbiAgICBjb25zdCBpbnN0ID0gVXNlclN0eWxlc01hbmFnZXIuX2luc3RhbmNlXG4gICAgaWYgKGluc3QpIHtcbiAgICAgIHJldHVybiBpbnN0LmZpbGVzLmZpbHRlcigoZmlsZSkgPT4ge1xuICAgICAgICBjb25zdCBmaWxlSW5mbyA9IHBhdGgucGFyc2UoZmlsZSlcbiAgICAgICAgY29uc3QgZmlsZU5hbWUgPSBmaWxlSW5mby5uYW1lLnRvTG93ZXJDYXNlKClcbiAgICAgICAgY29uc3QgZmlsZUhhc0NvbnRleHQgPSBmaWxlTmFtZS5tYXRjaCgvLS1bYS16XSskLykgIT09IG51bGxcbiAgICAgICAgY29uc3QgZmlsZUNvbnRleHRNYXRjaGVzID1cbiAgICAgICAgICBmaWxlSGFzQ29udGV4dCAmJiBmaWxlTmFtZS5lbmRzV2l0aChgLS0ke2NvbnRleHR9YClcbiAgICAgICAgcmV0dXJuICFmaWxlSGFzQ29udGV4dCB8fCBmaWxlQ29udGV4dE1hdGNoZXNcbiAgICAgIH0pXG4gICAgfSBlbHNlIHJldHVybiBbXVxuICB9XG5cbiAgcHJpdmF0ZSBzdGF0aWMgaW5zdGFuY2UoKSB7XG4gICAgaWYgKFVzZXJTdHlsZXNNYW5hZ2VyLl9pbnN0YW5jZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBVc2VyU3R5bGVzTWFuYWdlci5faW5zdGFuY2UgPSBuZXcgVXNlclN0eWxlc01hbmFnZXIoKVxuICAgIH1cbiAgICBVc2VyU3R5bGVzTWFuYWdlci5faW5zdGFuY2UubnVtVXNlcnMgKz0gMVxuICAgIHJldHVybiBVc2VyU3R5bGVzTWFuYWdlci5faW5zdGFuY2VcbiAgfVxuXG4gIHB1YmxpYyBkaXNwb3NlKCkge1xuICAgIHRoaXMubnVtVXNlcnMgLT0gMVxuICAgIGlmICh0aGlzLm51bVVzZXJzID09PSAwKSB7XG4gICAgICB0aGlzLmRpc3Bvc2FibGVzLmRpc3Bvc2UoKVxuICAgICAgVXNlclN0eWxlc01hbmFnZXIuX2luc3RhbmNlID0gdW5kZWZpbmVkXG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBzdWJzY3JpYmUoY2FsbGJhY2s6ICgpID0+IHZvaWQpIHtcbiAgICB0aGlzLnN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcbiAgICByZXR1cm4gbmV3IERpc3Bvc2FibGUoKCkgPT4ge1xuICAgICAgdGhpcy5zdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgfSlcbiAgfVxuXG4gIHByaXZhdGUgZGlkQ2hhbmdlRGlyQ29udGVudHMoKSB7XG4gICAgdGhpcy5maWxlcyA9IHRoaXMuZ2V0RGlyQ29udGVudHMoKVxuICAgIHRoaXMubm90aWZ5U3Vic2NyaWJlcnMoKVxuICB9XG5cbiAgcHJpdmF0ZSBnZXREaXJDb250ZW50cygpIHtcbiAgICBjb25zdCBlbnRyaWVzID0gdGhpcy5jb25maWdEaXIuZ2V0RW50cmllc1N5bmMoKVxuICAgIHJldHVybiBlbnRyaWVzXG4gICAgICAuZmlsdGVyKChlbnRyeSkgPT4ge1xuICAgICAgICBpZiAoZW50cnkuaXNEaXJlY3RvcnkoKSkgcmV0dXJuIGZhbHNlXG4gICAgICAgIGNvbnN0IGZpbGVQYXRoID0gZW50cnkuZ2V0UGF0aCgpLnRvTG93ZXJDYXNlKClcbiAgICAgICAgcmV0dXJuIGZpbGVQYXRoLmVuZHNXaXRoKCcubGVzcycpIHx8IGZpbGVQYXRoLmVuZHNXaXRoKCcuY3NzJylcbiAgICAgIH0pXG4gICAgICAubWFwKChmaWxlKSA9PiBmaWxlLmdldFBhdGgoKSlcbiAgfVxuXG4gIHByaXZhdGUgbm90aWZ5U3Vic2NyaWJlcnMoKSB7XG4gICAgZm9yIChjb25zdCBjYiBvZiB0aGlzLnN1YnNjcmliZXJzLnZhbHVlcygpKSB7XG4gICAgICBjYigpXG4gICAgfVxuICB9XG59XG4iXX0=